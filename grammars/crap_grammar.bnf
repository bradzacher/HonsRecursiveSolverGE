<individual>::=\
if (<condition>) {\n\
    return <base>;\n\
} else {\n\
    return <expr>;\n\
}\n

<condition>       ::= <var> <logic_op> <digit>

<logic_op>        ::= "<" | ">"

<op>              ::= - | * | +

<digit>           ::= 1 | 2 | <big_digit>
<big_digit>       ::= 3 | 4 | 5 | <bigger_digit>
<bigger_digit>    ::= 6 | 7 | <huge_digit>
<huge_digit>      ::= 8 | 9 | 0

<var>             ::= x

<base>            ::= <digit> | <var>

<expr>            ::= recurse(<rec_expr>) | \
recurse(<rec_expr>) <op> <maths_expr1>

<maths_expr1>     ::= <digit> | <var> | recurse(<rec_expr>) | \
recurse(<rec_expr>) <op> <maths_expr2>

<maths_expr2>     ::= <digit> | <var> | recurse(<rec_expr>)

<rec_expr>        ::= <var> <op> <digit>